#include <stdio.h>
#include <stdlib.h>
#include <signal.h>
#include <unistd.h>

int iteration = 0;

void signal_handler(int signo) {
    pid_t child_pid = fork();

    if (child_pid == -1) {
        perror("fork not created");
        exit(EXIT_FAILURE);
    } else if (child_pid > 0) {
        printf("\nParent: (PID %d), new child: (PID %d)\n", getpid(), child_pid);
        exit(EXIT_SUCCESS);
    } else {
        printf("Child: (PID %d) continuing from iteration %d\n", getpid(), iteration);
    }
}

int main() {
    if (signal(SIGINT, signal_handler) == SIG_ERR) {
        perror("signal is not tied to a method");
        return EXIT_FAILURE;
    }

    while (1) {
        if(iteration  == 10) {
        printf("exit");
            exit(EXIT_SUCCESS);
        }
        
        printf("Iteration %d\n", iteration++);

        sleep(1);
    }

    return 0;
}
